version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: galaos-postgres
    environment:
      POSTGRES_DB: galaos
      POSTGRES_USER: galaos
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-galaos_secure_password_change_me}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U galaos"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - galaos-network

  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    container_name: galaos-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis_secure_password_change_me}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - galaos-network

  # Ollama for Local LLMs
  ollama:
    image: ollama/ollama:latest
    container_name: galaos-ollama
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    networks:
      - galaos-network

  # GalaOS API
  galaos-api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: galaos-api
    environment:
      DATABASE_URL: postgresql://galaos:${POSTGRES_PASSWORD:-galaos_secure_password_change_me}@postgres:5432/galaos
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_secure_password_change_me}@redis:6379

      # AI Provider API Keys
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      PERPLEXITY_API_KEY: ${PERPLEXITY_API_KEY}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      HUGGINGFACE_API_KEY: ${HUGGINGFACE_API_KEY}

      # Service URLs
      OLLAMA_URL: http://ollama:11434
      PERPLEXITY_BASE_URL: ${PERPLEXITY_BASE_URL:-https://api.perplexity.ai}
      GOOGLE_BASE_URL: ${GOOGLE_BASE_URL:-https://generativelanguage.googleapis.com/v1beta}

      # MCP Configuration
      MCP_CONFIG_PATH: ${MCP_CONFIG_PATH:-/etc/galaos/mcp-servers.json}
      MCP_ENABLE_DOCKER_WATCH: ${MCP_ENABLE_DOCKER_WATCH:-true}

      # Other
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_key_here}
      NODE_ENV: production
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
      - /var/run/docker.sock:/var/run/docker.sock
      - mcp_config:/etc/galaos
    networks:
      - galaos-network
    labels:
      com.galaos.managed: "true"
      com.galaos.mcp.orchestrator: "true"

  # GalaOS Web (Frontend)
  galaos-web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: galaos-web
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001/trpc
      NODE_ENV: production
    ports:
      - "3000:3000"
    depends_on:
      - galaos-api
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/web/.next
    networks:
      - galaos-network
    labels:
      com.galaos.managed: "true"

  # GalaOS Worker
  galaos-worker:
    build:
      context: .
      dockerfile: apps/worker/Dockerfile
    container_name: galaos-worker
    environment:
      DATABASE_URL: postgresql://galaos:${POSTGRES_PASSWORD:-galaos_secure_password_change_me}@postgres:5432/galaos
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_secure_password_change_me}@redis:6379

      # AI Provider API Keys
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      PERPLEXITY_API_KEY: ${PERPLEXITY_API_KEY}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      HUGGINGFACE_API_KEY: ${HUGGINGFACE_API_KEY}

      # Service URLs
      OLLAMA_URL: http://ollama:11434
      PERPLEXITY_BASE_URL: ${PERPLEXITY_BASE_URL:-https://api.perplexity.ai}
      GOOGLE_BASE_URL: ${GOOGLE_BASE_URL:-https://generativelanguage.googleapis.com/v1beta}

      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - galaos-network
    labels:
      com.galaos.managed: "true"

volumes:
  postgres_data:
  redis_data:
  ollama_data:
  mcp_config:

networks:
  galaos-network:
    driver: bridge
