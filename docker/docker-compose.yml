version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: galaos-postgres
    environment:
      POSTGRES_USER: galaos
      POSTGRES_PASSWORD: galaos_dev_password
      POSTGRES_DB: galaos
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U galaos']
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache & Queue
  redis:
    image: redis:7-alpine
    container_name: galaos-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    container_name: galaos-api
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://galaos:galaos_dev_password@postgres:5432/galaos
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
    ports:
      - '3001:3001'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ../apps/api:/app/apps/api
      - ../packages:/app/packages
      - /app/node_modules
      - /app/apps/api/node_modules
    command: npm run dev --workspace=@galaos/api

  # Frontend Web App
  web:
    build:
      context: ..
      dockerfile: docker/Dockerfile.web
    container_name: galaos-web
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001/trpc
    ports:
      - '3000:3000'
    depends_on:
      - api
    volumes:
      - ../apps/web:/app/apps/web
      - ../packages:/app/packages
      - /app/node_modules
      - /app/apps/web/node_modules
      - /app/apps/web/.next
    command: npm run dev --workspace=@galaos/web

volumes:
  postgres_data:
  redis_data:
